plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.btech.superapp.baseapp"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.btech.superapp.baseapp"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    signingConfigs {
       
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
       
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            shrinkResources true
        }
    }


    flavorDimensions "app"

    productFlavors {
        prod {
            dimension "app"
            resValue "string", "app_name", "SuperApp"
            applicationId "com.btech.superapp.baseapp"
        }
        dev {
            dimension "app"
            resValue "string", "app_name", "SuperApp dev"
            versionNameSuffix "-dev"
            applicationId "com.btech.superapp.baseapp.dev"
        }
        hml {
            dimension "app"
            resValue "string", "app_name", "SuperApp hml"
            versionNameSuffix "-hml"
            applicationId "com.btech.superapp.baseapp.hml"
        }
        partner {
            dimension "app"
            resValue "string", "app_name", "Partner"
            applicationId "com.btech.superapp.baseapp.partner"
        }
        partner_dev {
            dimension "app"
            resValue "string", "app_name", "Partner dev"
            versionNameSuffix "-dev"
            applicationId "com.btech.superapp.baseapp.partner.dev"
        }
        partner_hml {
            dimension "app"
            resValue "string", "app_name", "Partner hml"
            versionNameSuffix "-hml"
            applicationId "com.btech.superapp.baseapp.partner.hml"
        }
    }
}

flutter {
    source = "../.."
}
